server:
  port: 6771
netty:
  port: 9001
spring:
  profiles:
    active: test
  application:
    name: ter
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html #配置后缀名，配置以后可以省略文件后缀
    cache: false #关闭缓存
  datasource:
#    url: jdbc:mysql://${Ter.mysql.ip}:${Ter.mysql.port}/${Ter.mysql.db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    url: jdbc:p6spy:mysql://${Ter.mysql.ip}:${Ter.mysql.port}/${Ter.mysql.db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${Ter.mysql.username}
    password: ${Ter.mysql.password}
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
#    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      #初始化时建立物理连接的个数
      initial-size: 5
      #最小连接池数量
      min-idle: 5
      #最大连接池数量 maxIdle已经不再使用
      max-active: 20
      #获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      #既作为检测的间隔时间又作为testWhileIdeal执行的依据
      time-between-eviction-runs-millis: 60000
      #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      #用来检测连接是否有效的sql 必须是一个查询语句
      #mysql中为 select 'x'
      #oracle中为 select 1 from dual
      validation-query: select 'x'
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      #当数据库抛出不可恢复的异常时,抛弃该连接
      exception-sorter: true
      #是否缓存preparedStatement,mysql5.5+建议开启
      pool-prepared-statements: true
      #当值大于0时poolPreparedStatements会自动修改为true
      max-pool-prepared-statement-per-connection-size: 20
  data:
    redis:
      password: ${Ter.redis.password}
      host: ${Ter.redis.host}
      port: ${Ter.redis.port}
      database: 0
      timeout: 20000
      lettuce: # 这里标明使用lettuce配置
        pool:
          max‐idle: 50              # 连接池中的最大空闲连接
          min‐idle: 10              # 连接池中的最小空闲连接
          max‐active: 100           # 连接池最大连接数（使用负值表示没有限制）
          max‐wait: 1000            #  连接池最大阻塞等待时间（使用负值表示没有限制）
  mail:
    test-connection: true
    default-encoding: UTF-8
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.starttls.required: true
      mail.smtp.ssl.enable: true
      mail.display.sendmail: Ter
mybatis:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.cabin.ter.**.domain
  config-location: classpath:mybatis-config.xml
rocketmq:
  enhance:
    # 启动隔离，用于激活配置类EnvironmentIsolationConfig
    # 启动后会自动在topic上拼接激活的配置文件，达到自动隔离的效果
    enabledIsolation: false
    # 隔离环境名称，拼接到topic后，topic_dev，默认空字符串
    environment: dev
  consumer:
    group: consumer_group
    pull-batch-size: 10
    listeners:
      rocketmq_source_code_group:
        rocketmq_source_code: true
  name-server: ${Ter.RocketMQ.name-server}
  producer:
    group: producer_group
    send-message-timeout: 10000
    retry-times-when-send-failed: 2
    retry-times-when-send-async-failed: 2
    max-message-size: 4096
    compress-message-body-threshold: 4096
    retry-next-server: false
logging:
  config: classpath:logback.xml
  level:
    org.apache.rocketmq: error
    RocketmqClient: error
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

# 二级缓存配置
l2cache:
  config:
    # 是否存储空值，默认true，防止缓存穿透
    allowNullValues: true
    # 组合缓存配置
    composite:
      # 是否全部启用一级缓存，默认false
      l1AllOpen: false
      # 是否手动启用一级缓存，默认false
      l1Manual: true
      # 手动配置走一级缓存的缓存key集合，针对单个key维度
      l1ManualKeySet:
        - userCache:user01
        - userCache:user02
        - userCache:user03
      # 手动配置走一级缓存的缓存名字集合，针对cacheName维度
      l1ManualCacheNameSet:
        - userCache
        - goodsCache
    # 一级缓存
    caffeine:
      # 是否自动刷新过期缓存 true 是 false 否
      autoRefreshExpireCache: false
      # 缓存刷新调度线程池的大小
      refreshPoolSize: 2
      # 缓存刷新的频率(秒)
      refreshPeriod: 10
      # 写入后过期时间(秒)
      expireAfterWrite: 180
      # 访问后过期时间(秒)
      expireAfterAccess: 180
      # 初始化大小
      initialCapacity: 1000
      # 最大缓存对象个数，超过此数量时之前放入的缓存将失效
      maximumSize: 3000

    # 二级缓存
    redis:
      # 全局过期时间，单位毫秒，默认不过期
      defaultExpiration: 300000
      # 每个cacheName的过期时间，单位毫秒，优先级比defaultExpiration高
      expires: {userCache: 300000,goodsCache: 50000}
      # 缓存更新时通知其他节点的topic名称 默认 cache:redis:caffeine:topic
      topic: cache:redis:caffeine:topic
wx:
  mp:
    callback: ${Ter.wx.callback}
    configs:
      - appId: ${Ter.wx.appId} # 第一个公众号的appid
        secret: ${Ter.wx.secret} # 公众号的appsecret
        token: ${Ter.wx.token} # 接口配置里的Token值
        aesKey: ${Ter.wx.aesKey} # 接口配置里的EncodingAESKey值
os:
  tx:
    SecretId: ${Ter.os.tx.secretId}
    SecretKey: ${Ter.os.tx.secretKey}